#!/usr/bin/env sh
# scripts/build: Build the sites vendor assets from node_modules and clean up.

# Exit immediately if a command exits with a non-zero status.
set -e

# Set current working directory to the root of the project
cd "$(dirname "$0")/.."

sass_dir="_sass"
vendor="assets/vendor"
node_modules="node_modules"

# Due to the way jekyll works, it will render ANY file that could be considered a page/post,
# meaning any file within a path that is NOT excluded in your _config.yml file, will be rendered.
# 
# This is a hacky way to remove the unwanted files transfered from node_modules, but it's the 
# safest way to do it without add every single directory/file to the _config.yml files excludes.
echo "==> Cleaning up renderable 'node_modules/' files, if any..."
find node_modules -type f | grep -E '^.*((LICENSE|README|CHANGELOG|CONTRIBUTING|AUTHORS|HISTORY|NOTICE|CHANGES|UPGRADING|UPGRADE|SECURITY|CONDUCT|CONDUCT|PATENTS|VERSION).*|\.(md|txt|htm*|m*down)|package*.json|yarn*.lock)$' | xargs rm -f --verbose 2>&1

# clear vendor assets
if [ ! -d "$vendor" ]; then
    echo "==> Creating '${vendor}'"
    mkdir -p "$vendor" --verbose
else
    echo "==> Nuking old assets '${vendor}'..."
    rm -rf "${vendor}"/*
fi

# jquery
if [ -d "$node_modules/jquery" ]; then
    echo "==> Copying jquery to $vendor"
    cp -r $node_modules/jquery/dist $vendor/jquery
fi

# bootstrap
if [ -d "$node_modules/bootstrap" ]; then
    echo "==> Copying bootstrap to $vendor"
    cp -r $node_modules/bootstrap/dist $vendor/bootstrap
    
    # copy sass files
    if [ ! -d "$sass_dir/bootstrap" ]; then
        mkdir -p "$sass_dir/bootstrap" --verbose
    else
        echo "==> Nuking old sass files '${sass_dir}/bootstrap'..."
        rm -rf "${sass_dir}/bootstrap"/*
    fi
    
    echo "==> Copying bootstrap sass to $sass_dir"
    cp -r $node_modules/bootstrap/scss/* $sass_dir/bootstrap
fi

# bootstrap-icons
if [ -d "$node_modules/bootstrap-icons" ]; then
    
    if [ ! -d "$sass_dir/bootstrap-icons" ]; then
        mkdir -p "$sass_dir/bootstrap-icons" --verbose
    else
        echo "==> Nuking old sass files '${sass_dir}/bootstrap-icons'..."
        rm -rf "${sass_dir}/bootstrap-icons"/*
    fi
    
    cp -r $node_modules/bootstrap-icons/font/fonts $sass_dir/bootstrap-icons
    cp $node_modules/bootstrap-icons/font/*.scss $sass_dir/bootstrap-icons
fi

# popper.js
if [ -d "$node_modules/popper.js" ]; then
    echo "==> Copying popper.js to $vendor"
    cp -r $node_modules/popper.js/dist $vendor/popper.js
fi

# fontawesome-free
if [ -d "$node_modules/fontawesome-free" ]; then
    echo "==> Copying fontawesome to $vendor"
    cp -r $node_modules/fontawesome-free $vendor/fontawesome
    #mv $vendor/fontawesome-free $vendor/fontawesome
fi

# jquery-ui
if [ -d "$node_modules/jquery-ui-dist" ]; then
    echo "==> Copying jquery-ui to $vendor"
    cp -r $node_modules/jquery-ui-dist $vendor/jquery-ui
    #mv $vendor/jquery-ui-dist $vendor/jquery-ui
fi

# highlight.js
if [ -d "$node_modules/highlight.js" ]; then
    echo "==> Copying highlight.js to $vendor"
    mkdir -p $vendor/highlight.js
    cp -r $node_modules/highlight.js/lib $vendor/highlight.js/js
    cp -r $node_modules/highlight.js/styles $vendor/highlight.js/css
fi

# clipboard.js
if [ -d "$node_modules/clipboard.js" ]; then
    echo "==> Copying clipboard.js to $vendor"
    cp -r $node_modules/clipboard.js/dist/ $vendor/clipboard.js/
fi

echo "==> Build complete!"
exit 0